#include <nds.h>
#include "gl2d.h"
#include <maxmod9.h>

#include "graphics/fontHandler.h"
#include "graphics/graphics.h"

#include "date.h"

#include "ghzFloor.h"

static int ts_floorTexID;
static glImage ts_floorImage[(32 / 32) * (32 / 32)];

//extern mm_sound_effect snd_jump;

void timeSettingsGraphicLoad(void) {
	ts_floorTexID = glLoadTileSet(ts_floorImage, // pointer to glImage array
							32, // sprite width
							32, // sprite height
							32, // bitmap width
							32, // bitmap height
							GL_RGB16, // texture type for glTexImage2D() in videoGL.h
							TEXTURE_SIZE_32, // sizeX for glTexImage2D() in videoGL.h
							TEXTURE_SIZE_32, // sizeY for glTexImage2D() in videoGL.h
							GL_TEXTURE_WRAP_S | GL_TEXTURE_WRAP_T | TEXGEN_OFF, // param for glTexImage2D() in videoGL.h
							16, // Length of the palette to use (16 colors)
							(u16*) ghzFloorPal, // Load our 16 color tiles palette
							(u8*) ghzFloorBitmap // image data generated by GRIT
							);
}

void timeSettingsMode(void) {
	if (isBothScreens()) {
		printLarge(false, 0, 0, "SonicClock");
		printLarge(false, 0, 8, "Nothing on this screen yet.");
	}
}

static int ts_floorRenderCount = 0;

void timeSettingsDisplay(void) {
	for (ts_floorRenderCount = 0; ts_floorRenderCount <= 256; ts_floorRenderCount += 32) {
		glSprite(ts_floorRenderCount, -8, GL_FLIP_NONE, ts_floorImage);
		glSprite(ts_floorRenderCount, 168, GL_FLIP_NONE, ts_floorImage);
	}
}
